image: node:20

# 환경설정
variables:
  DB_USERNAME: "postgres"
  DB_PASSWORD: "postgres"
  DB_DATABASE: "homeblog"
  NODE_MODULES_CACHE_KEY: ${CI_COMMIT_REF_SLUG}-node-modules
  NODE_OPTIONS: "--max-old-space-size=4096"
  DOCKER_IMAGE_CLIENT: $CI_REGISTRY_IMAGE/client
  DOCKER_IMAGE_SERVER: $CI_REGISTRY_IMAGE/server
  DOCKER_TAG: ${CI_COMMIT_SHORT_SHA}

# 캐쉬
cache:
  key: ${NODE_MODULES_CACHE_KEY}
  paths:
    - src/client/node_modules/
    - src/server/node_modules/
  policy: pull-push

# 순서
stages:
  - build
  - deploy

# 빌드
build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - |
      if [ "$CI_NODE_INDEX" = "0" ]; then
        # 클라이언트 빌드 및 이미지 푸시
        cd src/client
        docker build -t $DOCKER_IMAGE_CLIENT:$DOCKER_TAG -t $DOCKER_IMAGE_CLIENT:latest .
        docker push $DOCKER_IMAGE_CLIENT:$DOCKER_TAG
        docker push $DOCKER_IMAGE_CLIENT:latest
      else
        # 서버 빌드 및 이미지 푸시
        cd src/server
        docker build -t $DOCKER_IMAGE_SERVER:$DOCKER_TAG -t $DOCKER_IMAGE_SERVER:latest .
        docker push $DOCKER_IMAGE_SERVER:$DOCKER_TAG
        docker push $DOCKER_IMAGE_SERVER:latest
      fi
  only:
    - main
    - develop
  tags:
    - blog
  timeout: 20m

deploy:
  stage: deploy
  image: docker/compose:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $NAS_DEPLOY_PATH
    - |
      cat > .env << EOL
      DB_USERNAME=${DB_USERNAME}
      DB_PASSWORD=${DB_PASSWORD}
      DB_DATABASE=${DB_DATABASE}
      NODE_ENV=production
      NEXT_PUBLIC_API_URL=http://localhost:4000
      DOCKER_IMAGE_CLIENT=${DOCKER_IMAGE_CLIENT}
      DOCKER_IMAGE_SERVER=${DOCKER_IMAGE_SERVER}
      DOCKER_TAG=${DOCKER_TAG}
      EOL
    - docker-compose pull
    - docker-compose down
    - docker-compose up -d
  environment:
    name: production
  only:
    - main
  tags:
    - blog

deploy_staging:
  stage: deploy
  image: docker/compose:latest
  services:
    - docker:dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd $NAS_DEPLOY_PATH
    - |
      cat > .env << EOL
      DB_USERNAME=${DB_USERNAME}
      DB_PASSWORD=${DB_PASSWORD}
      DB_DATABASE=${DB_DATABASE}
      NODE_ENV=staging
      NEXT_PUBLIC_API_URL=http://localhost:4000
      DOCKER_IMAGE_CLIENT=${DOCKER_IMAGE_CLIENT}
      DOCKER_IMAGE_SERVER=${DOCKER_IMAGE_SERVER}
      DOCKER_TAG=${DOCKER_TAG}
      EOL
    - docker-compose pull
    - docker-compose down
    - docker-compose up -d
  environment:
    name: staging
  only:
    - develop
  tags:
    - blog
